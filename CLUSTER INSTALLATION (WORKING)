https://www.linuxtechi.com/install-kubernetes-on-ubuntu-22-04/

# STEP1) Set hostname and add entries in the hosts file

Master Node:  		10.21.7.12 – k8smaster.example.net
First Worker Node:  10.21.7.13 – k8sworker1.example.net
Second Worker Node: 10.21.7.19 – k8sworker2.example.net

Add following entries in /etc/hosts file:

10.21.7.12   k8smaster.example.net k8smaster
10.21.7.13   k8sworker1.example.net k8sworker1
10.21.7.19   k8sworker2.example.net k8sworker2

#MASTER
sudo hostnamectl set-hostname "k8smaster.example.net"
exec bash
#WORKER1
sudo hostnamectl set-hostname "k8sworker1.example.net"
exec bash
#WORKER2
sudo hostnamectl set-hostname "k8sworker2.example.net"
exec bash

# Step 2) Disable swap & add kernel settings

sudo swapoff -a
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab

sudo tee /etc/modules-load.d/containerd.conf <<EOF
overlay
br_netfilter
EOF
sudo modprobe overlay
sudo modprobe br_netfilter

sudo tee /etc/sysctl.d/kubernetes.conf <<EOF
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

sudo sysctl --system

# Step 3) Install containerd run time

sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates

sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

sudo apt update
sudo apt install -y containerd.io

containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

sudo systemctl restart containerd
sudo systemctl enable containerd

# Step 4) Add apt repository for Kubernetes

curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -
sudo apt-add-repository "deb http://apt.kubernetes.io/ kubernetes-xenial main"

# Step 5) Install Kubernetes components Kubectl, kubeadm & kubelet

sudo apt update
sudo apt install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

# Step 6) Initialize Kubernetes cluster with Kubeadm command

sudo kubeadm init --control-plane-endpoint=k8smaster.example.net

mkdir -p $HOME/.kube
sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
sudo chown $(id -u):$(id -g) $HOME/.kube/config

kubectl cluster-info
kubectl get nodes

#kubeadm join k8smaster.example.net:6443 --token 2596mo.mwuc6ekiqivjz2lk --discovery-token-ca-cert-hash sha256:c035fffb42aa4706db9ee1c84bc8ff6a3636a055c2d06cbcccfe456fd5a99968

# Step 7) Install Calico Pod Network Add-on

kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.25.0/manifests/calico.yaml

curl https://projectcalico.docs.tigera.io/manifests/calico.yaml -O
kubectl apply -f calico.yaml

kubectl get pods -n kube-system

kubectl expose deployment nginx-app --type=NodePort --port=80